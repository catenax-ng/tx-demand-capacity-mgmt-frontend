# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will initiate a Veracode Static Analysis Pipeline scan, return a results.json and convert to SARIF for upload as a code scanning alert

name: Veracode Static Analysis Pipeline Scan

on:
  push:
    branches: [ "DCMFOSS-32" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "DCMFOSS-32" ]
  schedule:
    - cron: '27 12 * * 6'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read

jobs:
  # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
  build-and-pipeline-scan:
    # The type of runner that the job will run on
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest

    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it and copies all sources into ZIP file for submitting for analysis. Replace this section with your applications build steps
    - uses: actions/checkout@v3
      with:
        repository: ''

    - run: zip -r veracode-scan-target.zip ./

    - name: Run Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.4
        with:
            appname: "demand-capacity-mgmt-frontend"
            createprofile: false
            filepath: "./veracode-scan-target.zip"
            vid: "${{ secrets.VERACODE_API_ID }}"
            vkey: "${{ secrets.VERACODE_API_KEY }}"